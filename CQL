CQL Fundamentals:
CQL
Keyspaces
Tables
Core Datatypes

CQL is similar to SQL - No Joins supported

Keyspace:
Top level container / namespace / schema
Similar to RDBMS Schema
Syntax - 
CREATE KEYSPACE ABCD
WITH REPLICATION = {
  'class': 'SimpleStrategy',
  'replication_factor': 1
 };
 
Replication parameter is mandatory

USE ABCD;

CREATE TABLE table1 (
  column1 TEXT,
  column2 INT,
  PRIMARY KEY (column1)
 );
 
DataTypes:
TEXT - UTF8 
int - Signed 32 Bits
timestamp - date and time 64 bit integer

UUID - Universally unique identifier - Similar to GUID in Microsoft world - generated via uuid()
TIMEUUID - embeds a timestamp value - sortable - generated via now() - No 2 timestamps can be same

Why do we need UUID and TIMEUUID:
Distributed systems, almost impossible to generate sequence number. With the help of GUID and TIMEUUID, we get a guaranteed Unique number.


INSERT is similar to SQL
Primary key is mandatory for Insert

SELECT is similar - does not support joins

COPY command - imports and exports the CSV file
copy table1 (col1, col2) FROM 'abcd.csv'

copy table1 (col1, col2) FROM 'abcd.csv'
WITH HEADER=true; - ----> to skip the first line in the file


HANDS ON:
================


CREATE KEYSPACE killrvideo
WITH REPLICATION = {
  'class': 'SimpleStrategy',
  'replication_factor': 1
 };

use killrvideo;

DESCRIBE KEYSPACE killrvideo;

use killrvideo;

CREATE TABLE videos (
    id UUID PRIMARY KEY,
    added_date TIMESTAMP,
    title TEXT
);

insert into videos (id,added_date, title)
values(uuid(), '2014-01-29', 'Cassandra History');

select * from videos;

insert into videos (id,added_date, title)
values(uuid(), '2012-04-03', 'Cassandra & SSDs');

TRUNCATE videos;

COPY videos(id, added_date, title)
FROM 'data-files/videos.csv'
WITH HEADER=TRUE;

select * from videos;
